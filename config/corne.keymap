/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                combo_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI |RIGHT| SPC |   | ENT | LEFT | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 1 &kp RALT
                        >;
                };

                left_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  !  |  @  |  #  |  $  |  %  | BSPC |
// | SHFT |  `  |  ~  |  _  |  -  |     |   |     |     |     |     |     |      |
// | CTRL | "|" |  /  |     |     |     |   |     |     |     |     |     | ESC  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB     &kp N1  &kp N2  &kp N3   &kp N4   &kp N5   &kp EXCL    &kp AT     &kp HASH  &kp DLLR   &kp PRCNT  &kp BSPC
   &kp LSHFT   &kp GRAVE     &kp TILDE     &trans         &trans         &trans         &trans    &trans     &trans  &trans   &trans  &trans
   &kp LCTRL   &kp PIPE      &kp BSLH      &trans         &trans         &trans         &trans    &trans     &trans  &trans   &trans  &kp ESC
                                           &kp LGUI       &mo 1          &kp SPACE      &kp RET   &mo 2      &kp RALT
                        >;
                };

                right_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  ^  |  &  |  *  |  (  |  )  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | SHFT |     |     |     |     |     |   |  {  |  }  |  =  |  +  |  :  |  "   |
// | CTRL |     |     |     |     |     |   |  [  |  ]  |  <  |  >  |  ?  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE | ALT |
                        bindings = <
   &kp TAB   &kp CARET &kp AMPS &kp STAR   &kp LPAR &kp RPAR      &kp N6          &kp N7          &kp N8          &kp N9           &kp N0          &kp BSPC
   &kp LSHFT &trans &trans &trans   &trans &trans      &kp LBRC        &kp RBRC        &trans          &kp PLUS         &trans          &trans
   &kp LCTRL &trans &trans &trans   &trans &trans      &kp LBKT        &kp RBKT        &trans          &trans           &trans          &kp ESC
                           &kp LGUI &mo 1  &kp SPACE   &kp RET         &mo 2           &kp RALT
                        >;
                };

                combo_layer {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8  |  F9 | F10 | F11 |  F12 |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |      |  UP |     |     |      |
// |      |     |     |     |     |     |   |     |  LFT | DWN | RGT |     |      |
//                    |     |     |     |   |     |      |     |
                        bindings = <
   &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6         &kp F7   &kp F8    &kp F9   &kp F10    &kp F11  &kp F12
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans    &kp UP   &trans     &trans   &trans
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT  &kp DOWN &kp RIGHT  &trans   &trans
                                        &trans       &mo 1        &trans         &trans   &mo 2     &kp RALT
                        >;
                };
        };
};
